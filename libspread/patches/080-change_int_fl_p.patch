--- a/libspread/fl_p.h
+++ b/libspread/fl_p.h
@@ -112,7 +112,7 @@ typedef struct {
   char    sender[MAX_GROUP_NAME];
   int     num_groups;
   char    (*groups)[MAX_GROUP_NAME];
-  int16   mess_type;
+  short   mess_type;
   int     endian_mismatch;
   int     mess_len;
   char    *mess;
@@ -131,7 +131,7 @@ typedef struct {
   int      max_groups;
   int      *num_groups;
   char     (*groups)[MAX_GROUP_NAME];
-  int16    *mess_type;
+  short    *mess_type;
   int      *endian_mismatch;
   scatter  *scat_mess;
   int      ret;                                              /* return value from receive call */
@@ -153,7 +153,7 @@ typedef struct {
   int      orig_num_membs;
   char     (*membs_names)[MAX_GROUP_NAME];
   stdhash  orig_membs, curr_membs;                      /* <char*, nil>, ptrs into membs_names */
-  int16    my_index;                                /* index of this connection in membs_names */
+  short    my_index;                                /* index of this connection in membs_names */
 } view;
 
 /* This struct contains information on a spread level membership
@@ -278,9 +278,9 @@ typedef struct {
 
 /* mess types reserved by flush layer indicating special flush messages */
 /* MAKE SURE THAT FL_MIN_LEGAL_MESS_TYPE (in fl.h) IS ONE MORE THAN THE HIGHEST RESERVED MESS TYPE!!! */
-#define FLUSH_OK_MESS                    ((int16) -32768)
-#define FLUSH_RECV_MESS                  ((int16) -32767)
-#define VULNERABLE_MESS                  ((int16) -32766)
+#define FLUSH_OK_MESS                    ((short) -32768)
+#define FLUSH_RECV_MESS                  ((short) -32767)
+#define VULNERABLE_MESS                  ((short) -32766)
 #define IS_ILLEGAL_SEND_MTYPE(mess_type) ((mess_type) < FL_MIN_LEGAL_MESS_TYPE)
 
 /* structure routines */
@@ -295,7 +295,7 @@ static void free_sp_memb_change(sp_memb_
 static view *create_view(group_id gid);
 static void free_view(view *v);
 static void fill_view(view *v, service memb_type, int num_membs, 
-			     char (*membs)[MAX_GROUP_NAME], int16 index);
+			     char (*membs)[MAX_GROUP_NAME], short index);
 
 /* interface for reserving/locking connections */
 static fl_conn *lock_conn(mailbox mbox);             /* reserve and lock connection */
@@ -325,7 +325,7 @@ static void userm_to_buffm(gc_buff_mess 
 static int FL_int_flush(fl_conn *conn, fl_group *group);
 static int FL_int_scat_multicast(mailbox m, service s, const char *g,
 					int nr, char r[][MAX_GROUP_NAME],
-					int16 mess_type, const scatter *scat);
+					short mess_type, const scatter *scat);
 static int FL_int_receive(gc_recv_mess *m);
 
 /* state machine fcns: handler functions */
